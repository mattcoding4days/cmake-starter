#!/bin/python3

"""
Main executable file, all modules are utilized here
"""

# standard lib
import sys
from pathlib import Path

# local package
from tooling import settings
from tooling.clang import Clang
from tooling.cli import Cli
from tooling.compiler import Compiler
from tooling.packager import Packager
from tooling.utils import Log, Shell


def preflight():
    """
    @desc run some preflight checks to make sure devkit won't run into issues
    """
    # make sure we are running linux, because what else would you run?
    if "linux" not in sys.platform:
        raise Exception(f"{sys.platform} is currently not supported\n")

    shell = Shell()
    # verify that all the required programs are installed on the system
    for key, value in settings.CMAKE_PROGRAMS.items():
        if isinstance(value, str):
            if not shell.is_installed(value):
                raise Exception(
                    f"{value} was not found on the system, please install, or change the value of {key} in the tooling/settings.py file")
        else:
            program_name = value["name"]
            if not shell.is_installed(program_name):
                raise Exception(
                    f"{program_name} was not found on the system, please install, or change the value of {key} in the tooling/settings.py file")


def main() -> int:
    """
    @desc main function
    """
    try:
        preflight()

        cli = Cli()

        if cli.active_command == "package":
            packager = Packager(Path(cli.args.build_dir),
                                cli.args.name, cli.args.version, cli.args.type)
            packager.build_pkg()
        elif cli.active_command == "clang":
            clang = Clang()
            if cli.args.format:
                clang.format()
            if cli.args.lint:
                clang.lint()
        elif cli.active_command == "compile":
            cxx_compiler = ""
            c_compiler = ""
            if cli.args.clang:
                cxx_compiler = settings.CMAKE_PROGRAMS["CLANG_CXX_COMPILER"]
                c_compiler = settings.CMAKE_PROGRAMS["CLANG_C_COMPILER"]
            if cli.args.gnu:
                cxx_compiler = settings.CMAKE_PROGRAMS["GNU_CXX_COMPILER"]
                c_compiler = settings.CMAKE_PROGRAMS["GNU_C_COMPILER"]
            compiler = Compiler(cxx_compiler, c_compiler)
            if not compiler.compile():
                return 1
        else:
            Log.warn("No arguments were given, please run devkit --help")
            return 1

    except Exception as e:
        Log.error(f"{e}")
        return 1

    Log.complete("Done..")
    return 0


if __name__ == "__main__":
    exit(main())
